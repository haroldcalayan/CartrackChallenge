apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: "config.gradle"
apply from: "dependencies.gradle"

def secretkeyPropertiesFile = file("secretkey.properties")
def secretkeyProperties = new Properties()
secretkeyProperties.load(new FileInputStream(secretkeyPropertiesFile))

android {
  compileSdkVersion configs.compileSdkVersion
  buildToolsVersion configs.buildToolsVersion

  defaultConfig {
    applicationId configs.applicationId
    minSdkVersion configs.minSdkVersion
    targetSdkVersion configs.targetSdkVersion
    versionCode configs.versionCode
    versionName configs.versionName

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  signingConfigs {
    debug {
      storeFile file('keystore/debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
    staging {
      storeFile file('keystore/debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
    release {
      storeFile file('keystore/release.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      debuggable true
      minifyEnabled false
      zipAlignEnabled false
      signingConfig signingConfigs.debug
      manifestPlaceholders = [enableCrashReporting: "false"]
      buildConfigField "String", "BASE_APP_URL", DEV_BASE_APP_URL
      resValue "string", "GOOGLE_MAPS_KEY", secretkeyProperties['DEV_GOOGLE_MAPS_KEY']
    }

    staging {
      debuggable true
      minifyEnabled false
      zipAlignEnabled false
      signingConfig signingConfigs.staging
      manifestPlaceholders = [enableCrashReporting: "true"]
      buildConfigField "String", "BASE_APP_URL", STAGE_BASE_APP_URL
      resValue "string", "GOOGLE_MAPS_KEY", secretkeyProperties['STAGE_GOOGLE_MAPS_KEY']
    }

    release {
      debuggable false
      minifyEnabled true
      zipAlignEnabled true
      signingConfig signingConfigs.release
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      manifestPlaceholders = [enableCrashReporting: "true"]
      buildConfigField "String", "BASE_APP_URL", PROD_BASE_APP_URL
      resValue "string", "GOOGLE_MAPS_KEY", secretkeyProperties['PROD_GOOGLE_MAPS_KEY']
    }
  }

  sourceSets {
    main {
      java.srcDirs = ['src/main/java']
      res.srcDirs = [
              'src/main/res/layouts/detail',
              'src/main/res/layouts/list',
              'src/main/res/layouts/maps',
              'src/main/res/layouts/splash',
              'src/main/res/layouts',

              'src/main/res/drawable/detail',
              'src/main/res/drawable/list',
              'src/main/res/drawable/maps',
              'src/main/res/drawable/splash',
              'src/main/res/drawable',

              'src/main/res/layout',
              'src/main/res'
      ]
    }
  }

  buildFeatures {
    dataBinding true
  }

  applicationVariants.all { variant ->
    variant.outputs.all {
      outputFileName = outputFileName.replace("app", "CartrackChallenge-v" + defaultConfig.versionName)
    }
  }
}

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])

  // Kotlin
  implementation kotlinDependency

  // AndroidX
  implementation androidXDependencies.appCompat
  implementation androidXDependencies.KTX
  implementation androidXDependencies.constraintLayout
  implementation androidXDependencies.lifecycleExtension

  // Material
  implementation materialDependency

  // Play Services
  implementation playServicesDependencies.maps
  implementation playServicesDependencies.location

  // Maps
  implementation mapKTXDependencies.mapsKTX
  implementation mapKTXDependencies.mapsUtilsKTX

  // Timber
  implementation timberDependency

  // Retrofit
  implementation retrofitDependencies.retrofit
  implementation retrofitDependencies.converterGson

  // Room
  implementation roomDependencies.roomRuntime
  annotationProcessor roomDependencies.roomCompiler

  // Dagger
  implementation daggerDependencies.dagger
  kapt daggerDependencies.compiler

  // Test
  testImplementation testDependencies.junit
  androidTestImplementation testDependencies.extJunit
  androidTestImplementation testDependencies.espresso
}